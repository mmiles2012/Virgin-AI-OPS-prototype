import { useEffect, useState } from 'react';
import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import Papa from 'papaparse';

export default function GroundFuelMapViewer() {
  const [airportData, setAirportData] = useState([]);
  const [filter, setFilter] = useState('all');

  useEffect(() => {
    const fetchCSVData = async () => {
      const res = await fetch('/top300_airport_support.csv');
      const text = await res.text();
      const parsed = Papa.parse(text, { header: true }).data;
      const cleaned = parsed.map(entry => ({
        icao: entry.ICAO,
        iata: entry.IATA,
        name: entry['Airport Name'],
        country: entry.Country,
        lat: parseFloat(entry.Latitude),
        lon: parseFloat(entry.Longitude),
        support: entry.Support.toLowerCase()
      })).filter(a => !isNaN(a.lat) && !isNaN(a.lon));
      setAirportData(cleaned);
    };

    fetchCSVData();
  }, []);

  const filteredAirports = airportData.filter(a => {
    if (filter === 'all') return true;
    if (filter === 'fuel') return a.support === 'fuel_only' || a.support === 'both';
    if (filter === 'ground') return a.support === 'ground_only' || a.support === 'both';
    if (filter === 'both') return a.support === 'both';
    return true;
  });

  return (
    <div className="h-screen w-full">
      <div className="p-2 flex gap-2 bg-white z-10">
        <label>Filter:</label>
        <select value={filter} onChange={e => setFilter(e.target.value)} className="border p-1 rounded">
          <option value="all">All Airports</option>
          <option value="fuel">Fuel Only or Both</option>
          <option value="ground">Ground Handling Only or Both</option>
          <option value="both">Fuel + Ground Only</option>
        </select>
      </div>

      <MapContainer center={[20, 0]} zoom={2} scrollWheelZoom={true} className="h-full w-full z-0">
        <TileLayer
          attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />
        {filteredAirports.map((airport, index) => (
          <Marker key={index} position={[airport.lat, airport.lon]}>
            <Popup>
              <strong>{airport.name}</strong><br />
              ICAO: {airport.icao}<br />
              IATA: {airport.iata}<br />
              Country: {airport.country}<br />
              Support: {airport.support}
            </Popup>
          </Marker>
        ))}
      </MapContainer>
    </div>
  );
}