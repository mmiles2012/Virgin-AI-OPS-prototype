import requests
import folium

# -- API KEYS (replace with your free keys) --
OPENSKY_USERNAME = 'your_opensky_username'
OPENSKY_PASSWORD = 'your_opensky_password'
AVIATIONSTACK_API_KEY = 'your_aviationstack_key'
MAPBOX_API_KEY = 'your_mapbox_key'

# -- Get OpenSky aircraft near the UK --
def get_opensky_aircraft():
    url = 'https://opensky-network.org/api/states/all'
    params = {
        'lamin': 49.5,
        'lamax': 59.0,
        'lomin': -10.0,
        'lomax': 2.0
    }
    try:
        response = requests.get(url, auth=(OPENSKY_USERNAME, OPENSKY_PASSWORD), params=params)
        response.raise_for_status()
        data = response.json()
        return data['states'][:10] if 'states' in data else []
    except Exception as e:
        print(f"OpenSky Error: {e}")
        return []

# -- Get a single real-time flight using AviationStack (e.g., VS103) --
def get_aviationstack_flight():
    url = 'http://api.aviationstack.com/v1/flights'
    params = {
        'access_key': AVIATIONSTACK_API_KEY,
        'flight_iata': 'VS103'
    }
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        data = response.json()
        return data['data'][0] if data.get('data') else None
    except Exception as e:
        print(f"AviationStack Error: {e}")
        return None

# -- Create map with OpenSky aircraft --
def create_map(aircraft):
    m = folium.Map(
        location=[51.5, -0.12],
        zoom_start=5,
        tiles=f'https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{{z}}/{{x}}/{{y}}?access_token={MAPBOX_API_KEY}',
        attr='Mapbox'
    )

    for ac in aircraft:
        callsign = ac[1] or "N/A"
        lat, lon = ac[6], ac[5]
        if lat and lon:
            folium.Marker(
                location=[lat, lon],
                popup=f"Callsign: {callsign}",
                icon=folium.Icon(color='blue', icon='plane', prefix='fa')
            ).add_to(m)

    m.save("map.html")
    print("Map saved as map.html — open it in your browser")

# -- Run the components --
if __name__ == "__main__":
    print("Fetching aircraft from OpenSky...")
    aircraft = get_opensky_aircraft()

    print("Fetching flight data from AviationStack...")
    flight = get_aviationstack_flight()
    if flight:
        print(f"Flight {flight['flight']['iata']} → {flight['arrival']['airport']}")

    print("Generating map...")
    create_map(aircraft)