Return Types¶

class opensky_api.OpenSkyStates(states_dict)¶
Represents the state of the airspace as seen by OpenSky at a particular time. It has the following fields:

time: int - in seconds since epoch (Unix time stamp). Gives the validity period of all states. All vectors represent the state of a vehicle with the interval .
states: list [StateVector] - a list of StateVector or is None if there have been no states received.
class opensky_api.StateVector(arr)¶
Represents the state of a vehicle at a particular time. It has the following fields:

icao24: str - ICAO24 address of the transmitter in hex string representation.
callsign: str - callsign of the vehicle. Can be None if no callsign has been received.
origin_country: str - inferred through the ICAO24 address.
time_position: int - seconds since epoch of last position report. Can be None if there was no position report received by OpenSky within 15s before.
last_contact: int - seconds since epoch of last received message from this transponder.
longitude: float - in ellipsoidal coordinates (WGS-84) and degrees. Can be None.
latitude: float - in ellipsoidal coordinates (WGS-84) and degrees. Can be None.
geo_altitude: float - geometric altitude in meters. Can be None.
on_ground: bool - true if aircraft is on ground (sends ADS-B surface position reports).
velocity: float - over ground in m/s. Can be None if information not present.
true_track: float - in decimal degrees (0 is north). Can be None if information not present.
vertical_rate: float - in m/s, incline is positive, decline negative. Can be None if information not present.
sensors: list [int] - serial numbers of sensors which received messages from the vehicle within the validity period of this state vector. Can be None if no filtering for sensor has been requested.
baro_altitude: float - barometric altitude in meters. Can be None.
squawk: str - transponder code aka Squawk. Can be None.
spi: bool - special purpose indicator.
position_source: int - origin of this state’s position: 0 = ADS-B, 1 = ASTERIX, 2 = MLAT, 3 = FLARM
category: int - aircraft category: 0 = No information at all, 1 = No ADS-B Emitter Category Information, 2 = Light (< 15500 lbs), 3 = Small (15500 to 75000 lbs), 4 = Large (75000 to 300000 lbs), 5 = High Vortex Large (aircraft such as B-757), 6 = Heavy (> 300000 lbs), 7 = High Performance (> 5g acceleration and 400 kts), 8 = Rotorcraft, 9 = Glider / sailplane, 10 = Lighter-than-air, 11 = Parachutist / Skydiver, 12 = Ultralight / hang-glider / paraglider, 13 = Reserved, 14 = Unmanned Aerial Vehicle, 15 = Space / Trans-atmospheric vehicle, 16 = Surface Vehicle – Emergency Vehicle, 17 = Surface Vehicle – Service Vehicle, 18 = Point Obstacle (includes tethered balloons), 19 = Cluster Obstacle, 20 = Line Obstacle.
class opensky_api.FlightData(arr)¶
Class that represents data of certain flight. It has the following fields:

icao24: str - Unique ICAO 24-bit address of the transponder in hex string representation. All letters are lower case.
firstSeen: int - Estimated time of departure for the flight as Unix time (seconds since epoch).